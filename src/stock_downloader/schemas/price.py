from pandas import Timestamp
from pandera.pandas import DataFrameSchema, Column, Check, Index, MultiIndex

price_schema = DataFrameSchema(
    columns={
        "symbol": Column(
            dtype="object",
            checks=[
                Check.str_length(
                    min_value=1,
                    max_value=5,
                    raise_warning=True,
                    ignore_na=True,
                )
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "date": Column(
            dtype="datetime64[ns]",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=Timestamp("1900-01-1 00:00:00"),
                    raise_warning=False,
                    ignore_na=True,
                ),
                Check.less_than_or_equal_to(
                    max_value=Timestamp("2030-01-01 00:00:00"),
                    raise_warning=False,
                    ignore_na=True,
                ),
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "open": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=0,
                    raise_warning=False,
                    ignore_na=True,
                )
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "high": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=0,
                    raise_warning=False,
                    ignore_na=True,
                )
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "low": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=0,
                    raise_warning=False,
                    ignore_na=True,
                )
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "close": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=0,
                    raise_warning=False,
                    ignore_na=True,
                )
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "volume": Column(
            dtype="int32",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=0,
                    raise_warning=False,
                    ignore_na=True,
                )
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "dividends": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=0,
                    raise_warning=False,
                    ignore_na=True,
                )
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "stock_splits": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(
                    min_value=0,
                    raise_warning=False,
                    ignore_na=True,
                )
            ],
            nullable=True,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
    },
    checks=None,
    index=Index(
        dtype="int64",
        checks=None,
        nullable=False,
        coerce=False,
        name=None,
        description=None,
        title=None,
    ),
    dtype=None,
    coerce=True,
    strict=False,
    name=None,
    ordered=False,
    unique=None,
    report_duplicates="all",
    unique_column_names=False,
    add_missing_columns=False,
    title=None,
    description=None,
)
